{{ import('css','mainWorks.css','ext.widgets.views') }}

<script type="text/javascript">

mainWorksWidget =
{
    pageId: 1,
    pics: [],
    maxPages: 1,            // Максимальное количество страниц
    posCont: false,
    worksCont: false,
    leftArrow: false,
    rightArrow: false,

    init: function()
    {
        var self = this;
        self.posCont = $('#js-main-works-cont-pos');
        self.worksCont = $('#js-main-works-cont');
        self.leftArrow = $('#js-main-works-left-arrow');
        self.rightArrow = $('#js-main-works-right-arrow');

        {% for work in works %}
            self.pics.push( {'id':{{work.id}}, 'image':'{{work.image}}', 'title':'{{work.title}}', 'desc':'{{work.desc}}', 'link':'{{work.link}}'} );
        {% endfor %}
        for (var i = 0; i < self.pics.length; i++)
        {
            self.pics[i].html = self.createImageHtml( i, self.pics[i] );
            self.worksCont.append( self.pics[i].html );
        };

        if (self.pics.length == 0)
            self.maxPages = 0;
        if (self.pics.length <= 5)
            self.maxPages = 1;
        else
            self.maxPages = 1 + Math.floor((self.pics.length - 5) / 6);

        self.posCont.css({
            'width': (app.workWidth*5)+'px',
            'margin-left': '-'+Math.floor(app.workWidth*5/2)+'px'
        })

        app.addListener(app.eventReposition, mainWorksWidget.onResize);
        app.resize();

        // Позиционируем стрелки
        //var contCenter = self.posCont.offset().top + self.posCont.height()/2;
        var contCenter = self.posCont.height()/2;
        var arrowCenter = contCenter - self.leftArrow.height()/2;
//        $('body').append(self.leftArrow);
        self.leftArrow.css('top',arrowCenter+'px');
        arrowCenter = contCenter - self.rightArrow.height()/2;
//        $('body').append(self.rightArrow);
        self.rightArrow.css('top',arrowCenter+'px');

        self.leftArrow
            .click(self.onLeft)
            .mouseenter(self.onLeftEnter)
            .mouseleave(self.onLeave);
        self.rightArrow
            .click(self.onRight)
            .mouseenter(self.onRightEnter)
            .mouseleave(self.onLeave);

        $('[id^="js-work"] #js-work-opacity-layer').each( function()
        {
            var el = $(this);
            el.mouseenter( function()
            {
                el.css('opacity', 0.6);
            })
            .mouseleave( function()
            {
                el.css('opacity', 0);
            });
        });
    },

    createImageHtml: function( idx, pict )
    {
        var self = this;
        var x = 0;
        var y = 0;
        var layerWidth = app.bigWorkWidth;
        var layerHeight = app.workHeight * 2;
        if (idx > 0)
        {
            x = app.bigWorkWidth + Math.floor((idx-1)/2) * app.workWidth;
            if (idx % 2 == 0)
                y = app.workHeight;
            layerWidth = app.workWidth;
            layerHeight = app.workHeight;
        }
        var html =  '<div id="js-work'+idx+'" style="position:absolute; left:'+x+'px; top:'+y+'px; width:'+layerWidth+'px; height:'+layerHeight+'px" data_id="'+pict.id+'">' +
                    '<table id="js-work-opacity-layer" class="main-works-opacity-layer" border=0 cellpadding=0 cellspacing=0><tr><td>' +
                        '<a href="' + pict.link + '">' +
                            '<div id="js-work-title" class="work-title">' + pict.title + '</div>' +
                            '<div id="js-work-desc" class="work-desc">' + pict.desc + '</div>' +
                        '</a>' +
                    '</table>' +
                    '<img src="'+pict.image+'">' +
                    '</div>';
        return html;
    },

    showPage: function( pageId )
    {
        var self = this;
        self.pageId = pageId;

        var offs = app.bigWorkWidth * (pageId - 1);
        self.worksCont.css({'left':'-'+offs+'px'});
    },

    moveToPage: function( pageId )
    {
        var self = this;
        if (self.pageId == pageId)
            return;
        var delta = pageId - self.pageId;
        self.pageId = pageId;
        if (delta > 0)
        {
            // to next
            delta *= app.workWidth * 3;
            self.worksCont.animate({left:'-='+delta});
        }
        else
        {
            // to prev
            delta *= -app.workWidth * 3;
            self.worksCont.animate({left:'+='+delta});
        }
    },

    onResize: function( ev )
    {
        var ceils = ev.ceils;

        var startId = 0;
        var count = 5;
        var maxCount = 5;
        if (mainWorksWidget.pageId > 1)
        {
            startId = 1 + (mainWorksWidget.pageId-2) * 6;
            count = 10;
            maxCount = 10;
        }
        count -= (5-ceils)*2;
        app.resizePage( mainWorksWidget.posCont, app.workWidth * ceils );
        mainWorksWidget.showActualPics( startId, count, maxCount );
    },

    showActualPics: function( startId, count, maxCount )
    {
        for (var i = startId; i < startId + maxCount; i++)
        {
            var el = mainWorksWidget.worksCont.find('#js-work'+i);
            var isHide = el.data('isHide') !== undefined;
            var isAnim = el.data('isAnim') !== undefined;
            if (i < startId + count)
            {
                if (!isHide && isAnim)
                {
                    // Идет анимация затухания
                    el.stop();
                    el.data('isHide', true);
                    el.removeData('isAnim');
                    isHide = true;
                    isAnim = false;
                }
                if (isHide  &&  !isAnim)
                {
                    el.data('isAnim', true);
                    el.css({'opacity':0});
                    el.animate( {'opacity':1}, app.animDuration, function(el)
                    {
                        $(this).removeData('isHide');
                        $(this).removeData('isAnim');
                    });
                }
            }
            if (i >= startId + count)
            {
                if (isHide  &&  isAnim)
                {
                    // Идет анимация появления
                    el.stop();
                    el.removeData('isHide');
                    el.removeData('isAnim');
                    isHide = false;
                    isAnim = false;
                }
                if (!isHide  &&  !isAnim)
                {
                    el.data('isAnim', true);
                    el.animate( {'opacity':0}, app.animDuration, function()
                    {
                        $(this).data('isHide', true);
                        $(this).removeData('isAnim');
                        $(this).css({'opacity':1});
                    });
                }
            }
        }
    },

    onLeft: function(ev)
    {
        if (mainWorksWidget.pageId <= 1)
            return;
        mainWorksWidget.moveToPage( mainWorksWidget.pageId-1 );
    },

    onRight: function(ev)
    {
        if (mainWorksWidget.pageId > mainWorksWidget.maxPages)
            return;
        mainWorksWidget.moveToPage( mainWorksWidget.pageId+1 );
    },

    onLeftEnter: function(ev)
    {
        if (mainWorksWidget.pageId > 1)
            mainWorksWidget.arrowEnter($(this));
    },

    onRightEnter: function(ev)
    {
        if (mainWorksWidget.pageId <= mainWorksWidget.maxPages)
            mainWorksWidget.arrowEnter($(this));
    },

    onLeave: function(ev)
    {
        var el = $(this);
        el.stop();
        el.animate({opacity:'0.1'}, 100);
    },

    arrowEnter: function(el)
    {
        el.stop();
        el.animate({opacity:'1'}, 100);
    }
};


$(document).ready( function()
{
    mainWorksWidget.init();
    mainWorksWidget.showPage( {{ currPage }} );
});
</script>

<div class='main-works-widget'>
    <div id='js-main-works-cont-pos' class='main-works-cont-pos'>
        <div id='js-main-works-cont' class='main-works-cont'></div>
        <div id='js-main-works-left-arrow' class="main-works-left-arrow">&lt;</div>
        <div id='js-main-works-right-arrow' class="main-works-right-arrow">&gt;</div>
    </div>
</div>
